<UserControl x:Class="CHI.Application.Views.ServicesSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:CHI.Application.Views"
             xmlns:i="clr-namespace:CHI.Application.Infrastructure"
             xmlns:prism="http://prismlibrary.com/"
             
             mc:Ignorable="d"
             d:DesignHeight="600"
             d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CHI.Application;component/Views/Resources/DefaultStyle.xaml" />
                <ResourceDictionary Source="/CHI.Application;component/Views/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="180" />
            <ColumnDefinition Width="260" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        
        <TextBlock Grid.Row="0"
                   Grid.Column="0"
                   Text="Адрес сайта СРЗ" />
        <TextBox Grid.Row="0"
                 Grid.Column="1"
                 Text="{Binding Settings.SRZAddress, ValidatesOnDataErrors=True}" />

        <TextBlock Grid.Row="1"
                   Grid.Column="0"
                   Text="Адрес сайта Диспансеризации" />
        <TextBox Grid.Row="1"
                 Grid.Column="1"
                 Text="{Binding Settings.MedicalExaminationsAddress, ValidatesOnDataErrors=True}" />

        <TextBlock Grid.Row="2"
                   Grid.Column="0"
                   Text="Использовать прокси-сервер" />
        <CheckBox Grid.Row="2"
                  Grid.Column="1"
                  Name="CheckBoxUseProxy"
                  IsChecked="{Binding Settings.UseProxy}" />

        <TextBlock Grid.Row="3"
                   Grid.Column="0"
                   Name="TextBlockProxy"
                   Text="Прокси-сервер адрес:порт"
                   Visibility="{Binding Path=IsChecked, ElementName=CheckBoxUseProxy, Converter={i:BoolToVisibleConverter}}" />
        <Grid Grid.Row="3"
              Grid.Column="1"
              Visibility="{Binding Path=Visibility,ElementName=TextBlockProxy}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0"
                     Text="{Binding Settings.ProxyAddress,ValidatesOnDataErrors=True}" />
            <TextBox Grid.Column="1"
                     Text="{Binding Settings.ProxyPort}" />
        </Grid>

        <TextBlock Grid.Row="4"
                   Grid.Column="0"
                   Text="Количество потоков" />
        <TextBox Grid.Row="4"
                 Grid.Column="1"
                 Text="{Binding Settings.ThreadsLimit, ValidatesOnDataErrors=True}" />

        <TextBlock Grid.Row="5"
                   Grid.Column="0"
                   Text="Доступ к учетным записям" />
        <ComboBox Grid.Row="5"
                  Grid.Column="1"
                  ItemsSource="{Binding Path=Settings.CredentialsScope, Converter={i:EnumToCollectionConverter}, Mode=OneTime}"
                  SelectedValuePath="Key"
                  DisplayMemberPath="Value"
                  SelectedValue="{Binding Path=Settings.CredentialsScope}" />

        <TextBlock Grid.Row="6"
                   Grid.Column="0"
                   Text="Учетные записи" />

        <!--Столбцы DataGrid не являются частью логического дерева этого View, поэтому их нельзя привязать к свойствам ViewModel-->
        <!--Использование x:Name и FrameworkElement принадлежащего логическому дереву позволяет обойти ограничение используя FrameworkElement как посредника-->
        <FrameworkElement x:Name="proxyElement" />

        <i:CustomDataGrid Grid.Row="7"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          MinHeight="100"
                          ItemsSource="{Binding Settings.Credentials}">

            <DataGrid.Columns>

                <!--Столбец Логин-->
                <DataGridTextColumn Header="Логин"
                                    Binding="{Binding Login, ValidatesOnDataErrors=True}"
                                    MinWidth="145" />

                <!--Столбец Пароль-->
                <!--Шаблон Заголовка. В заголовок вставляем текст и кнопку для переключения видимости паролей-->
                <DataGridTemplateColumn MinWidth="145">
                    <DataGridTemplateColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment"
                                    Value="Stretch" />
                        </Style>
                    </DataGridTemplateColumn.HeaderStyle>
                    <DataGridTemplateColumn.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                       Text="Пароль"
                                       Margin="0" />

                            <Button Grid.Column="2"
                                    Style="{StaticResource PictureTransparentButton}"
                                    Command="{Binding DataContext.SwitchShowPasswordCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">

                                <!--В кнопку вставляем 2 рисунка - пароль видно и пароль скрыт. Одновременно отображается только один-->
                                <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Bottom">
                                    <ContentControl Content="{Binding Source={StaticResource PassowrdHide}}"
                                                    Visibility="{Binding DataContext.ShowTextPassword, Source={x:Reference proxyElement}, Converter={i:BoolToVisibleConverter} }" />
                                    <ContentControl Content="{Binding Source={StaticResource PasswordShow}}"
                                                    Visibility="{Binding DataContext.ShowProtectedPassword, Source={x:Reference proxyElement}, Converter={i:BoolToVisibleConverter}}" />
                                </StackPanel>
                            </Button>
                        </Grid>
                    </DataGridTemplateColumn.Header>

                    <!--Шаблон ячейки-->
                    <DataGridTemplateColumn.CellTemplate>
                        <!--Вставляем 2 контрола. Одновременно отображается только один -->
                        <DataTemplate>
                            <Grid>
                                
                                <PasswordBox Style="{StaticResource  DataGridTemplateColumnControl}"
                                             i:PasswordBoxHelper.BoundPassword="{Binding Password, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}"
                                             Visibility="{Binding DataContext.ShowProtectedPassword, Source={x:Reference proxyElement}, Converter={i:BoolToVisibleConverter}}">
                                </PasswordBox>

                                <TextBox Style="{StaticResource  DataGridTemplateColumnControl}"
                                         Text="{Binding Password, UpdateSourceTrigger=LostFocus,  ValidatesOnDataErrors=True}"
                                         Visibility="{Binding DataContext.ShowTextPassword, Source={x:Reference proxyElement}, Converter={i:BoolToVisibleConverter}}">
                                </TextBox>

                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>

                <!--Столбец Лимит запросов-->
                <DataGridTextColumn Header="Лимит запросов"
                                    Binding="{Binding RequestsLimit, ValidatesOnDataErrors=True}"
                                    MinWidth="100"
                                    Width="*" />

            </DataGrid.Columns>
        </i:CustomDataGrid>

        <StackPanel Grid.Row="8"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Orientation="Horizontal">
            <Button Content="Проверить"
                    Command="{Binding TestCommand}" />
            <Button Content="Сохранить"
                    Command="{Binding SaveCommand}" />
            <Button Content="Отмена"
                    Command="{Binding LoadCommand}" />
            <Button Content="По умолчанию"
                    Command="{Binding SetDefaultCommand}" />
        </StackPanel>

    </Grid>
</UserControl>