<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:CHI.Application.Infrastructure"
                    xmlns:v="clr-namespace:CHI.Application.Views"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">


    <!-- TextBlock-->

    <Style x:Key="SubTitleText"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="FontWeight"
                Value="Medium" />
        <Setter Property="Margin"
                Value="5,15,5,15" />

    </Style>

    <!--Buttons-->

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Margin"
                Value="5,20,5,20" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="MinWidth"
                Value="120" />
        <Setter Property="FontWeight"
                Value="Regular" />
    </Style>


    <Style x:Key="IconButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Width"
                Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryHueMidBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="false">
                <Setter Property="Foreground"
                        Value="DimGray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TextBoxes-->

    <Style BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="{x:Type TextBox}">
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="MaxHeight"
                Value="24" />
    </Style>

    <!--CheckBox-->

    <Style TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <!--ComboBox-->

    <Style TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Path=Value}"
                               FontWeight="Medium"
                               Margin="0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RadioButton-->

    <Style x:Key="TabRadioButton"
           TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource  MaterialDesignTabRadioButton}">
        <Setter Property="Margin"
                Value="5,5,15,5" />
        <Setter Property="Padding"
                Value="5,5,5,5" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryHueMidBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Cursor"
                        Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DataPicker-->

    <Style TargetType="{x:Type DatePicker}"
           BasedOn="{StaticResource {x:Type DatePicker}}">
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="MinWidth"
                Value="100" />
        <Style.Resources>
            <!-- Cбрасываем стиль button. Стиль button применяется к кнопке календаря и элемент некрасиво расползается-->
            <Style TargetType="{x:Type Button}"
                   BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="MinHeight"
                        Value="0" />
                <Setter Property="MinWidth"
                        Value="0" />
            </Style>
        </Style.Resources>
    </Style>

    <!--DataGrids-->

    <Style TargetType="i:CustomDataGrid"
           BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="Margin"
                Value="0,5,0,5" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="MinHeight"
                Value="100" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="False" />
        <Setter Property="CanUserReorderColumns"
                Value="False" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="materialDesign:DataGridAssist.ColumnHeaderPadding"
                Value="5" />
        <Setter Property="materialDesign:DataGridAssist.CellPadding"
                Value="7" />
    </Style>


    <DataTemplate x:Key="DataGridDragColumn">
        <Viewbox Stretch="UniformToFill"
                 HorizontalAlignment="Right">
            <ContentControl Content="{materialDesign:PackIcon EllipsisVertical}"
                            Foreground="LightGray" />
        </Viewbox>
    </DataTemplate>



    <Style x:Key="DataGridTextBlock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource  {x:Type TextBlock}}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{DynamicResource DataGridValidationTemplate}" />
    </Style>



    <Style x:Key="DataGridTextEditing"
           TargetType="{x:Type TextBox}" 
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{DynamicResource DataGridValidationTemplate}" />
    </Style>



    <Style x:Key="DataGridPasswordBox"
           TargetType="{x:Type PasswordBox}"
           BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{DynamicResource DataGridValidationTemplate}" />
    </Style>


    <ControlTemplate x:Key="DataGridValidationTemplate">
        <StackPanel Orientation="Vertical">
            <AdornedElementPlaceholder />
            <TextBlock 
                       Text="{Binding CurrentItem.ErrorContent}"
                       VerticalAlignment="Center"
                       Margin="2"
                       FontSize="10"
                       Foreground="{DynamicResource ValidationErrorBrush}"
                       UseLayoutRounding="False" />
            
        </StackPanel>
    </ControlTemplate>
    
    

    <!--<ControlTemplate x:Key="DataGridValidationTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="!"
                       VerticalAlignment="Center"
                       Margin="0,0,4,0"
                       FontSize="{Binding ElementName=Placeholder, Path=AdornedElement.(materialDesign:ValidationAssist.FontSize)}"
                       Foreground="{DynamicResource ValidationErrorBrush}" />
            <AdornedElementPlaceholder />
        </StackPanel>
    </ControlTemplate>-->

</ResourceDictionary>