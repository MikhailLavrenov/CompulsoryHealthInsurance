<Window x:Class="CHI.Application.Views.ShellView"
        x:Name="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CHI.Application"
        xmlns:i="clr-namespace:CHI.Application.Infrastructure"
        xmlns:v="clr-namespace:CHI.Application.Views"
        xmlns:vm="clr-namespace:CHI.Application.ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="{Binding ApplicationTitle}"
        Height="600"
        Width="850"
        MinHeight="600"
        MinWidth="850"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}"
        prism:ViewModelLocator.AutoWireViewModel="True">

    <Window.Style>

        <!--Убирает стандартную рамку и заголовок окна -->
        <Style>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome ResizeBorderThickness="3"
                                  CaptionHeight="0"
                                  CornerRadius="0"
                                  NonClientFrameEdges="None"
                                  GlassFrameThickness="1" />
                </Setter.Value>
            </Setter>
            <!-- Устраняет растягивание окна на панель задач и выход окна за пределы экрана-->
            <Style.Triggers>
                <Trigger Property="Window.WindowState"
                         Value="Maximized">
                    <Setter Property="Window.BorderThickness"
                            Value="8" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Style>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CHI.Application;component/Views/Resources/WindowDefaultStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MenuCaptionText"
                   TargetType="TextBlock"
                   BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="FontWeight"
                        Value="Regular" />
                <Setter Property="Foreground"
                        Value="White" />
            </Style>

            <Style x:Key="MenuButtonText"
                   TargetType="TextBlock"
                   BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="TextWrapping"
                        Value="Wrap" />
                <Setter Property="Width"
                        Value="170" />
            </Style>

            <Style x:Key="MenuButton"
                   BasedOn="{StaticResource  MaterialDesignTabRadioButton}"
                   TargetType="{x:Type RadioButton}">
                <Setter Property="Margin"
                        Value="0,5,0,5" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="FontWeight"
                        Value="Light" />
                <Setter Property="Height"
                        Value="50" />
                <Setter Property="Foreground"
                        Value="#FFE6E6E6" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{TemplateBinding Background}">

                                    <materialDesign:Ripple Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Focusable="False"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Padding="{TemplateBinding Padding}"
                                                x:Name="ContentPresenter"
                                                Opacity="0.82"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <Border x:Name="SelectionHighlightBorder"
                                        HorizontalAlignment="Left"
                                        Width="2"
                                        Background="{TemplateBinding BorderBrush}"
                                        Visibility="Hidden" />
                                <Border x:Name="SelectionHighlightBackground"
                                        HorizontalAlignment="Stretch"
                                        Opacity="0.15"
                                        Background="{TemplateBinding BorderBrush}"
                                        Visibility="Hidden" />
                            </Grid>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Setter TargetName="ContentPresenter"
                                            Property="Opacity"
                                            Value="1" />
                                    <Setter TargetName="SelectionHighlightBorder"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="SelectionHighlightBackground"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>

                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="FontWeight"
                                            Value="Bold" />
                                    <Setter Property="FontSize"
                                            Value="14.5" />
                                    <Setter Property="Cursor"
                                            Value="Hand" />
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="WindowButton"
                   TargetType="{x:Type ButtonBase}"
                   BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="IsTabStop"
                        Value="False" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Width"
                        Value="40" />
                <Setter Property="Height"
                        Value="30" />
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth"
                        Value="Depth0" />
                <Setter Property="Foreground"
                        Value="White" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid Background="{TemplateBinding Background}">

                                <materialDesign:Ripple Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Focusable="False"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                </materialDesign:Ripple>
                                <Border Background="White"
                                        Opacity="0"
                                        x:Name="SelectionHue"
                                        BorderThickness="0">
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Opacity"
                                            Value="0.23" />
                                </Trigger>

                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter TargetName="SelectionHue"
                                            Property="Opacity"
                                            Value="0.15" />
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary >
    </Window.Resources>

    <b:Interaction.Behaviors>
        <i:DragWindowBehaviour />
    </b:Interaction.Behaviors>

    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding ShowViewCommand}"
                                   CommandParameter="{x:Type v:AttachedPatientsView}" />

            <b:InvokeCommandAction Command="{Binding CheckSettingsCommand}" />
        </b:EventTrigger>

        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding SaveSettingsCommand}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>

    <DockPanel d:DataContext="{d:DesignInstance vm:ShellViewModel}">
        
        <DockPanel.Background>
            <LinearGradientBrush EndPoint="0,0.5"
                                 StartPoint="0.5,0.5">
                <GradientStop Color="#FF01579B"
                              Offset="0.475" />
                <GradientStop Color="#FF0082EA"
                              Offset="1" />
            </LinearGradientBrush>
        </DockPanel.Background>

        <StackPanel DockPanel.Dock="Top"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal"
                    VerticalAlignment="Top">

            <Button Style="{StaticResource WindowButton}"
                    Command="{Binding MinimizeWindowCommand}">
                <materialDesign:PackIcon Kind="WindowMinimize" />
            </Button>

            <Button Style="{StaticResource WindowButton}"
                    Command="{Binding MaximizeWindowCommand}"
                    Visibility="{Binding IsMaximizedWidow, Converter={i:InvertedBoolToVisibleConverter}}">
                <materialDesign:PackIcon Kind="WindowMaximize" />
            </Button>

            <Button Style="{StaticResource WindowButton}"
                    Command="{Binding RestoreWindowCommand}"
                    Visibility="{Binding IsMaximizedWidow, Converter={i:BoolToVisibleConverter}}">
                <materialDesign:PackIcon Kind="WindowRestore" />
            </Button>

            <Button   Command="{Binding CloseWindowCommand}">
                <materialDesign:PackIcon Kind="WindowClose" />

                <Button.Style>
                    <Style TargetType="Button"
                           BasedOn="{StaticResource WindowButton}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

            </Button>

        </StackPanel>

        <Grid IsEnabled="{Binding MainRegionService.IsBusy, Converter={i:InvertBoolConverter}}">

            <ContentControl prism:RegionManager.RegionName="{x:Static i:RegionNames.ProgressBarRegion}">
                <ContentControl.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding  MainRegionService.IsBusy}"
                                         Value="True">
                                <Setter Property="Panel.ZIndex"
                                        Value="1" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>

            <DockPanel>

                <StackPanel Orientation="Vertical"
                            Width="210"
                            Background="Transparent">

                    <StackPanel Orientation="Horizontal"
                                Margin="25,23,10,10">
                        <materialDesign:PackIcon Kind="FormatListBulleted"
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,5,0"
                                                 Foreground="White" />
                        <TextBlock Text="Основное"
                                   Style="{StaticResource MenuCaptionText}" />
                    </StackPanel>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:AttachedPatientsView}"
                                 IsChecked="True">
                        <TextBlock Text="Загрузка прикрепленных пациентов"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:ExaminationsView}">
                        <TextBlock Text="Загрузка периодических осмотров"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <StackPanel Orientation="Horizontal"
                                Margin="25,20,10,10">
                        <materialDesign:PackIcon Kind="Tools"
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,5,0"
                                                 Foreground="White" />
                        <TextBlock Text="Настройки"
                                   Style="{StaticResource MenuCaptionText}" />
                    </StackPanel>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:AttachedPatientsSettingsView}">
                        <TextBlock Text="Загрузки прикрепленых пациентов"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:ExaminationsSettingsView}">
                        <TextBlock Text="Загрузки периодических осмотров"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:OtherSettingsView}">
                        <TextBlock Text="Прочие настройки"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <StackPanel Orientation="Horizontal"
                                Margin="25,20,10,0">
                        <materialDesign:PackIcon Kind="InfoCircle"
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,5,0"
                                                 Foreground="White" />
                        <TextBlock Text="Прочее"
                                   Style="{StaticResource MenuCaptionText}" />
                    </StackPanel>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:AboutView}">
                        <TextBlock Text="О программе"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                </StackPanel>

                <Border Background="White" >

                    <DockPanel x:Name="MainRegionPanel">

                        <materialDesign:ColorZone DockPanel.Dock="Top"
                                                  Mode="Light"
                                                  Padding="0"
                                                  materialDesign:ShadowAssist.ShadowDepth="Depth1">

                            <TextBlock DockPanel.Dock="Top"
                                       HorizontalAlignment="Left"
                                       Text="{Binding MainRegionService.Header, NotifyOnTargetUpdated=True}"
                                       FontSize="20"
                                       Margin="20,15,20,15"
                                       FontWeight="Medium"
                                       Foreground="#FF01579B" />

                        </materialDesign:ColorZone>

                        <i:CustomContentControl prism:RegionManager.RegionName="{x:Static i:RegionNames.MainRegion}"
                                        Margin="15,15,15,40">
                            
                            <b:Interaction.Behaviors>
                                <i:CircleAnimationBaseBehaviour AnimationParametersTarget="MainWindow"/>
                            </b:Interaction.Behaviors>

                        </i:CustomContentControl>

                    </DockPanel>

                </Border>

            </DockPanel>

            <materialDesign:Snackbar Margin="0"
                                     Opacity="0.9"
                                     HorizontalAlignment="Stretch"
                                     IsActive="{Binding MainRegionService.ShowStatus}">
                
                <materialDesign:SnackbarMessage ActionCommand="{Binding MainRegionService.CloseStatusCommand}">

                    <materialDesign:SnackbarMessage.ActionContent>
                        <Viewbox  Stretch="UniformToFill"
                                  Height="25"
                                  Margin="0"
                                  HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="ChevronDown"
                                                     Foreground="White" />
                        </Viewbox>
                    </materialDesign:SnackbarMessage.ActionContent>

                    <materialDesign:SnackbarMessage.Content>
                        <TextBlock Text="{Binding MainRegionService.Status}"
                                   HorizontalAlignment="Stretch"
                                   Margin="0"
                                   FontWeight="Regular"
                                   TextWrapping="Wrap" />
                    </materialDesign:SnackbarMessage.Content>

                </materialDesign:SnackbarMessage>
                
            </materialDesign:Snackbar>

        </Grid>

    </DockPanel>

</Window>
