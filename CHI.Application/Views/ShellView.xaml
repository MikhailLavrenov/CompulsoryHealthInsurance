<Window x:Class="CHI.Application.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CHI.Application"
        xmlns:i="clr-namespace:CHI.Application.Infrastructure"
        xmlns:v="clr-namespace:CHI.Application.Views"
        xmlns:vm="clr-namespace:CHI.Application.ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        Title="{Binding ApplicationTitle}"
        Height="600"
        Width="850"

        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}"
        prism:ViewModelLocator.AutoWireViewModel="True"
        IsEnabled="{Binding MainRegionService.IsBusy, Converter={i:InvertBoolConverter}}">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CHI.Application;component/Views/Resources/WindowDefaultStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MenuCaptionText"
                   TargetType="TextBlock"
                   BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="FontWeight"
                        Value="Regular" />
                <Setter Property="Foreground"
                        Value="White" />
            </Style>

            <Style x:Key="MenuButtonText"
                   TargetType="TextBlock"
                   BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="TextWrapping"
                        Value="Wrap" />
                <Setter Property="Width"
                        Value="170" />
            </Style>

            <Style x:Key="MenuButton"
                   BasedOn="{StaticResource MaterialDesignTabRadioButton}"
                   TargetType="{x:Type RadioButton}">
                <Setter Property="Margin"
                        Value="0,5,0,5" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="FontWeight"
                        Value="Light" />
                <Setter Property="Height"
                        Value="50" />
                <Setter Property="Foreground"
                        Value="LightGray" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="true">
                        <Setter Property="FontWeight"
                                Value="Bold" />
                        <Setter Property="FontSize"
                                Value="14.5" />
                    </Trigger>
                </Style.Triggers>

            </Style>

            <Style x:Key="WindowButton"                   
                   TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Width" 
                        Value="40" />
                <Setter Property="Height" Value="30"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0"/>
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
                <Setter Property="Foreground" Value="White"/>
                
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

        </ResourceDictionary >
    </Window.Resources>

    <b:Interaction.Behaviors>
        <i:DragWindowBehaviour/>
    </b:Interaction.Behaviors>

    <Grid>

        <ContentControl Panel.ZIndex="10"
                        prism:RegionManager.RegionName="{x:Static i:RegionNames.ProgressBarRegion}" />

        <DockPanel d:DataContext="{d:DesignInstance vm:ShellViewModel}"
                   Panel.ZIndex="0"
                   Background="White">

            <materialDesign:ColorZone DockPanel.Dock="Left"
                                      Mode="PrimaryMid"
                                      VerticalAlignment="Stretch">

                <StackPanel Orientation="Vertical"
                            Width="210"
                            Margin="0,3,0,3">

                    <StackPanel Orientation="Horizontal"
                                Margin="25,75,10,10">
                        <materialDesign:PackIcon Kind="FormatListBulleted"
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,5,0" />
                        <TextBlock Text="Основное"
                                   Style="{StaticResource MenuCaptionText}" />
                    </StackPanel>


                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:PatientsFileView}"
                                 IsChecked="True">
                        <TextBlock Text="Файл прикрепленных пациентов"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:ExaminationsView}">
                        <TextBlock Text="Загрузка периодических осмотров"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <StackPanel Orientation="Horizontal"
                                Margin="25,20,10,10">
                        <materialDesign:PackIcon Kind="Tools"
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,5,0" />
                        <TextBlock Text="Настройки"
                                   Style="{StaticResource MenuCaptionText}" />
                    </StackPanel>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:ServicesSettingsView}">
                        <TextBlock Text="Настройки подключения к сервисам"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:PatientsFileSettingsView}">
                        <TextBlock Text="Настройки файла прикреплен. пациентов"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:ExaminationsSettingView}">
                        <TextBlock Text="Настройки загрузки осмотров"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                    <StackPanel Orientation="Horizontal"
                                Margin="25,20,10,0">
                        <materialDesign:PackIcon Kind="InfoCircle"
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,5,0" />
                        <TextBlock Text="Прочее"
                                   Style="{StaticResource MenuCaptionText}" />
                    </StackPanel>

                    <RadioButton Style="{StaticResource MenuButton}"
                                 Command="{Binding ShowViewCommand}"
                                 CommandParameter="{x:Type v:AboutApplicationView}">
                        <TextBlock Text="О программе"
                                   Style="{StaticResource MenuButtonText}" />
                    </RadioButton>

                </StackPanel>

            </materialDesign:ColorZone>

            <DockPanel x:Name="MainRegionPanel"
                       RenderTransformOrigin="0.1,0.1">

                <DockPanel.RenderTransform>
                    <SkewTransform x:Name="AnimatedSkewTransform" />
                </DockPanel.RenderTransform>

                <materialDesign:ColorZone DockPanel.Dock="Top"
                                          Mode="PrimaryLight"
                                          Padding="0">

                    <DockPanel>

                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Top">

                            <Button Style="{StaticResource WindowButton}" Command="{Binding MinimizeWindowCommand}">
                                <materialDesign:PackIcon Kind="WindowMinimize"  />
                            </Button>

                            <Button Style="{StaticResource WindowButton}" Command="{Binding MaximizeWindowCommand}" Visibility="{Binding IsMaximizedWidow, Converter={i:InvertedBoolToVisibleConverter}}">
                                <materialDesign:PackIcon Kind="WindowMaximize"  />
                            </Button>

                            <Button Style="{StaticResource WindowButton}" Command="{Binding RestoreWindowCommand}" Visibility="{Binding IsMaximizedWidow, Converter={i:BoolToVisibleConverter}}">
                                <materialDesign:PackIcon Kind="WindowRestore"  />
                            </Button>

                            <Button   Command="{Binding CloseWindowCommand}" >
                                <materialDesign:PackIcon Kind="WindowClose"/>

                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource WindowButton}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Red" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                            </Button>


                        </StackPanel>

                        <TextBlock DockPanel.Dock="Left" Text="{Binding MainRegionService.Header, NotifyOnTargetUpdated=True}"
                               FontSize="20"
                               Margin="15"
                               FontWeight="Regular"
                               Foreground="White">

                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MainRegionPanel"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0.5"
                                                         From="0"
                                                         To="1" />

                                            <DoubleAnimation Storyboard.TargetName="AnimatedSkewTransform"
                                                         Storyboard.TargetProperty="AngleX"
                                                         Duration="0:0:0.5"
                                                         From="90"
                                                         To="0" />

                                            <DoubleAnimation Storyboard.TargetName="AnimatedSkewTransform"
                                                         Storyboard.TargetProperty="AngleY"
                                                         Duration="0:0:0.5"
                                                         From="90"
                                                         To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>

                        </TextBlock>

                    </DockPanel>

                </materialDesign:ColorZone>

                <Grid DockPanel.Dock="Bottom"
                      MinHeight="55">
                    <materialDesign:Snackbar Margin="15,0,15,0"
                                             HorizontalAlignment="Stretch"
                                             IsActive="{Binding MainRegionService.ShowStatus}">
                        <materialDesign:SnackbarMessage  
                                                         ActionCommand="{Binding MainRegionService.CloseStatusCommand}">

                            <materialDesign:SnackbarMessage.ActionContent>
                                <Viewbox  Stretch="UniformToFill"
                                          Height="25"
                                          Margin="0"
                                          HorizontalAlignment="Center">
                                    <materialDesign:PackIcon Kind="ChevronDown"
                                                             Foreground="White" />
                                </Viewbox>
                            </materialDesign:SnackbarMessage.ActionContent>

                            <materialDesign:SnackbarMessage.Content>
                                <TextBlock Text="{Binding MainRegionService.Status}" HorizontalAlignment="Stretch" Margin="0"
                                           FontWeight="Regular"
                                           TextWrapping="Wrap" />
                            </materialDesign:SnackbarMessage.Content>

                        </materialDesign:SnackbarMessage>
                    </materialDesign:Snackbar>
                </Grid>

                <ContentControl prism:RegionManager.RegionName="{x:Static i:RegionNames.MainRegion}"
                                Margin="10" />

            </DockPanel>

            <DockPanel.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.5"
                                             From="0"
                                             To="1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </DockPanel.Triggers>

        </DockPanel>

    </Grid>

</Window>
