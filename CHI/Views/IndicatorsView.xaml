<UserControl x:Class="CHI.Views.IndicatorsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CHI.Views"
              xmlns:v="clr-namespace:CHI.Views"
             xmlns:i="clr-namespace:CHI.Infrastructure"
             xmlns:vm="clr-namespace:CHI.ViewModels"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="600"
             d:DesignWidth="800"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <DockPanel d:DataContext="{d:DesignInstance vm:ComponentsViewModel}"
          HorizontalAlignment="Left">

        <TextBlock DockPanel.Dock="Top"
                   HorizontalAlignment="Center"
                   Text="{Binding Component.Name}" />

        <FrameworkElement DockPanel.Dock="Top"
                          Style="{StaticResource Separator}" x:Name="proxyElement" />

        <StackPanel DockPanel.Dock="Top"
                    Orientation="Horizontal">

            <Button Style="{StaticResource IconButton}"
                    Command="{Binding AddCommand}">
                <Viewbox Stretch="Uniform">
                    <materialDesign:PackIcon Kind="FileOutline" />
                </Viewbox>
            </Button>

            <Button Style="{StaticResource IconRedButton}"
                    Command="{Binding DeleteCommand}">
                <Viewbox Stretch="Uniform">
                    <materialDesign:PackIcon Kind="GarbageOutline" />
                </Viewbox>
            </Button>

            <FrameworkElement Style="{StaticResource Separator}" />

            <Button Style="{StaticResource IconButton}"
                    Command="{Binding MoveUpCommand}"
                    Cursor="Hand">
                <Viewbox Stretch="Uniform">
                    <materialDesign:PackIcon Kind="ArrowUpward" />
                </Viewbox>
            </Button>

            <Button Style="{StaticResource IconButton}"
                    Command="{Binding MoveDownCommand}">
                <Viewbox Stretch="Uniform">
                    <materialDesign:PackIcon Kind="ArrowDownward" />
                </Viewbox>
            </Button>

        </StackPanel>

        <i:CustomDataGrid x:Name="datagrid1" ItemsSource="{Binding Indicators}">

            <DataGrid.Columns>

                <DataGridTemplateColumn CellTemplate="{StaticResource DataGridDragColumn}"
                                        IsReadOnly="True" />

                <DataGridTextColumn Header="Название"
                                    Binding="{Binding Name}"
                                    MinWidth="120" />

                <DataGridTextColumn Header="Порядок"
                                    Binding="{Binding Order}"
                                    MinWidth="80" SortMemberPath="{Binding Order}" SortDirection="Descending"/>

                <materialDesign:DataGridComboBoxColumn Header="Вид"
                                                       ItemsSource="{Binding DataContext.IndicatorKinds, Source={x:Reference proxyElement}, Mode=OneTime}"
                                                       SelectedValuePath="Key"
                                                       DisplayMemberPath="Value"
                                                       SelectedValueBinding="{Binding Kind}"                
                                                       MinWidth="120" />

                <DataGridTemplateColumn Header="Выражения"
                                            MinWidth="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource DataGridRowButton}"
                                        Command="{Binding DataContext.EditExpressionsCommand, Source={x:Reference datagrid1}}"
                                        CommandParameter="{x:Type v:ExpressionsView}">
                                <Viewbox Stretch="Uniform">
                                    <materialDesign:PackIcon Kind="EllipsisHorizontalCircle" />
                                </Viewbox>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>



            </DataGrid.Columns>

        </i:CustomDataGrid>

    </DockPanel >
</UserControl>
