<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:CHI.Infrastructure"
                    >

    <!--ControlBase-->

    <Style x:Key="ControlBase"
           TargetType="{x:Type FrameworkElement}">
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <!--Buttons-->

    <Style TargetType="Button"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="MinWidth"
                Value="100" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
    </Style>


    <Style TargetType="Button"
           x:Key="PictureButton"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
    </Style>

    <Style TargetType="Button"
           x:Key="PictureTransparentButton"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button"
           x:Key="HeaderReferenceButton"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="Foreground"
                Value="#FF019BE2" />
        <Setter Property="Margin"
                Value="5,7,5,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock Text="{TemplateBinding Content}"
                               TextWrapping="WrapWithOverflow">                     
                        <!--<ContentPresenter />-->
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="FontWeight"
                        Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button"
           x:Key="ReferenceButton"
           BasedOn="{StaticResource HeaderReferenceButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock TextDecorations="Underline">                     
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Cursor"
                        Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--CheckBoxes-->

    <Style TargetType="CheckBox"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="BorderBrush"
                Value="LightGray" />
    </Style>

    <!--DataGrids-->

    <Style TargetType="i:CHI.Infrastructure.CustomDataGrid"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="MinHeight"
                Value="100" />
        <Setter Property="RowHeight"
                Value="22" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="False" />
        <Setter Property="CanUserReorderColumns"
                Value="False" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="RowHeaderWidth"
                Value="12" />
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!--Стиль для котролов DataGridTemplateColumn-->
    <Style TargetType="{x:Type Control}"
           x:Key="DataGridTemplateColumnControl">
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0" />

        <Style.Triggers>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding  IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding IsFocused, RelativeSource= {RelativeSource Self}}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Cursor"
                            Value="Arrow" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource= {RelativeSource AncestorType={x:Type DataGrid}}}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource= {RelativeSource AncestorType={x:Type DataGridRow}}}"
                               Value="True" />
                    <Condition Binding="{Binding  IsFocused, RelativeSource={RelativeSource Self}}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource= {RelativeSource AncestorType={x:Type DataGridRow}}}"
                               Value="True" />
                    <Condition Binding="{Binding  IsFocused, RelativeSource={RelativeSource Self}}"
                               Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background"
                            Value="Transparent" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <!--TextBlocks-->

    <Style TargetType="TextBlock"
           BasedOn="{StaticResource ControlBase}">
    </Style>

    <Style TargetType="TextBlock"
           x:Key="TextBlockHeader"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="FontWeight"
                Value="DemiBold" />
        <Setter Property="Margin"
                Value="5,20,5,20" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="TextBlockCaption"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="FontWeight"
                Value="DemiBold" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="MainMenu"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="FontWeight"
                Value="DemiBold" />
        <Setter Property="Foreground" 
                Value="Gray"/>
        <Setter Property="Margin" 
                Value="5,20,10,7"/>
    </Style>

    <!--TextBoxes-->

    <Style TargetType="TextBox"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
    </Style>

    <!--DatePickers-->

    <Style TargetType="DatePicker"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="Width"
                Value="120" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Style.Resources>
            <!-- Cбрасываем стиль button. Стиль button применяется к кнопке календаря и элемент некрасиво расползается-->
            <Style TargetType="{x:Type Button}">
                <Setter Property="MinHeight"
                        Value="19" />
                <Setter Property="MinWidth"
                        Value="0" />
            </Style>
        </Style.Resources>
    </Style>

    <!--ComboBoxes-->

    <Style TargetType="ComboBox"
           BasedOn="{StaticResource ControlBase}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
    </Style>

</ResourceDictionary>